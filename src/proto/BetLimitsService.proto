syntax = "proto3";
package rikstoto.betlimitsservice;
option csharp_namespace = "Rikstoto.Service.Betting.BetLimits.Contracts.Protobuf";
import "rikstoto_grpc_sharedcontracts.proto";
import "rikstoto_grpc_sharedcontracts_bettypecode.proto";
import "rikstoto_grpc_sharedcontracts_betsource.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service BetLimitsService
{
	rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) { }
	rpc LockBetLimits(LockBetLimitsRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc UnlockBetLimits(UnlockBetLimitsRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc SetNewBetPeriodLimitCustomerService(SetNewBetPeriodLimitCustomerServiceRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc GetAvailablePrizesForBetLimit(GetAvailablePrizesForBetLimitRequest) returns (GetAvailablePrizesForBetLimitResponse) {}
	rpc GetBetLimitTransactions(GetBetLimitTransactionsRequest) returns (GetBetLimitTransactionsResponse) {}
	rpc GetFutureBetLimitRemainders(GetFutureBetLimitRemaindersRequest) returns (GetFutureBetLimitRemaindersResponse) {}
	rpc GetBetLimitChanges(GetBetLimitChangesRequest) returns (GetBetLimitChangesResponse) {}
	rpc GetBetLimitSettingChanges(GetBetLimitSettingChangesRequest) returns (GetBetLimitSettingChangesResponse) {}
	rpc AddBetLimitReservation(AddBetLimitReservationRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc CancelBetLimitReservation(CancelBetLimitReservationRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc GetMustReconfirmBetLimits(GetMustReconfirmBetLimitsRequest) returns (GetMustReconfirmBetLimitsResponse) {}
	rpc ReconfirmBetLimits(ReconfirmBetLimitsRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc GetBetPeriodSummary(GetBetPeriodSummaryRequest) returns (GetBetPeriodSummaryResponse) {}
	rpc GetBetPeriodSummaryForTomorrow(GetBetPeriodSummaryForTomorrowRequest) returns (GetBetPeriodSummaryForTomorrowResponse) {}
	rpc SetNewBetPeriodLimitWithToken(SetNewBetPeriodLimitWithTokenRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc SetNewBetPeriodLimit(SetNewBetPeriodLimitRequest) returns (rikstoto.shared.protobuf.CommandResult) {}
	rpc GetBetLimitStatusForAmount(GetBetLimitStatusForAmountRequest) returns (GetBetLimitStatusForAmountResponse) {}
	rpc CanBetBePlaced(CanBetBePlacedRequest) returns (CanBetBePlacedResponse) {}
	rpc GetBetPeriodStatus(GetBetPeriodStatusRequest) returns (GetBetPeriodStatusResponse) {}
	rpc GetRemainingBetLimit(GetRemainingBetLimitRequest) returns (GetRemainingBetLimitResponse) {}
	rpc FindBetPeriodSummaryByToken(FindBetPeriodSummaryByTokenRequest) returns (FindBetPeriodSummaryByTokenResponse) {}
}

message HealthCheckRequest
{
	string message = 1;
}

message HealthCheckResponse
{
	string message = 1;
}

message LockBetLimitsRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	string changedBy = 2;
	string comment = 3;
	rikstoto.shared.protobuf.Money dailyLimit = 4;
	rikstoto.shared.protobuf.Money monthlyLimit = 5;
}

message UnlockBetLimitsRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	string changedBy = 2;
	string comment = 3;
}

message SetNewBetPeriodLimitCustomerServiceRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	rikstoto.shared.protobuf.Money dailyLimit = 2;
	rikstoto.shared.protobuf.Money monthlyLimit = 3;
	bool doNotPlayForPrizeMoney = 4;
	string changedBy = 5;
}

message GetAvailablePrizesForBetLimitRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetAvailablePrizesForBetLimitResponse {
	repeated BetLimitTransaction prizes = 1;
}

message BetLimitTransaction {
	rikstoto.shared.protobuf.Money amount = 1;
	rikstoto.shared.protobuf.Money remainingAmount = 2;
	google.protobuf.Timestamp addedTime = 3;
	BetLimitTransactionType typeOfTransaction = 4;
	google.protobuf.Timestamp correlatingTransactionDate = 5;
}

enum BetLimitTransactionType
{
	Bet = 0;
	Correction = 1;
	PrizeBet = 2;
	Prize = 3;
	Reservation = 4;
	RolloverBet = 5;
}

message GetBetLimitTransactionsRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetBetLimitTransactionsResponse {
	repeated BetLimitTransactionsForDay betLimitTransactionsForDay = 1;
}

message BetLimitTransactionsForDay {
	google.protobuf.Timestamp day = 1;
	repeated BetLimitTransaction betLimitTransactions = 2;
}

message GetFutureBetLimitRemaindersRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetFutureBetLimitRemaindersResponse {
	repeated BetLimitRemainderForDay betLimitRemainders = 1;
}

message BetLimitRemainderForDay {
	google.protobuf.Timestamp day = 1;
	rikstoto.shared.protobuf.Money remainder = 2;
	rikstoto.shared.protobuf.Money monthRemainder = 3;
	rikstoto.shared.protobuf.Money previousMonthRemainder = 4;
	rikstoto.shared.protobuf.Money twoPreviousMonthsRemainder = 5;
	rikstoto.shared.protobuf.Money prizeBalance = 6;
	rikstoto.shared.protobuf.Money dayRemainder = 7;
	rikstoto.shared.protobuf.Money totalRemainder = 8;
}

message GetBetLimitChangesRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	int32 skip = 2;
	int32 take = 3;
}

message GetBetLimitChangesResponse {
	repeated BetLimitChange changes = 1;
}

message BetLimitChange {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	BetLimitType limitType = 2;
	rikstoto.shared.protobuf.Money newLimit = 3;
	google.protobuf.Timestamp newLimitAddedTime = 4;
	google.protobuf.Timestamp newLimitValidFrom = 5;
	rikstoto.shared.protobuf.Money oldLimit = 6;
	google.protobuf.Timestamp oldLimitAddedTime = 7;
	google.protobuf.Timestamp oldLimitValidFrom = 8;
	string changedBy = 9;
}

enum BetLimitType
{
	Daily = 0;
	Monthly = 2;
	PrizeLimit = 3;
}

message GetBetLimitSettingChangesRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetBetLimitSettingChangesResponse {
	repeated BetLimitSettingChange changes = 1;
}

message BetLimitSettingChange {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	bool playForPrize = 2;
	google.protobuf.Timestamp ValidFrom = 3;
	google.protobuf.Timestamp ChangedTime = 4;
	string changedBy = 5;
}

message AddBetLimitReservationRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	rikstoto.shared.protobuf.Money amount = 2;
	string purchaseId = 3;
}

message CancelBetLimitReservationRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	string purchaseId = 2;
}

message GetMustReconfirmBetLimitsRequest{
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetMustReconfirmBetLimitsResponse {
	bool mustReconfirm = 1;
	bool isRequired = 2;
}

message ReconfirmBetLimitsRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	int32 dailyLimit = 2;
	int32 monthlyLimit = 3;
	bool playForPrize = 4;
}

message GetBetPeriodSummaryRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetBetPeriodSummaryResponse {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	repeated BetLimitSummaryForPeriod summaries = 2;
	repeated BetLimitSummaryForPreviousPeriod previousSummaries = 3;
	rikstoto.shared.protobuf.Money prizeMoney = 4;
	bool playForPrizeMoney = 5;
	BetLimitWarningThreshold betLimitWarningThreshold = 6;
	bool hasDefaultLimits = 7;
	bool locked = 8;
}

message GetBetPeriodSummaryForTomorrowRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetBetPeriodSummaryForTomorrowResponse {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	repeated BetLimitSummaryForPeriod summaries = 2;
	repeated BetLimitSummaryForPreviousPeriod previousSummaries = 3;
	rikstoto.shared.protobuf.Money prizeMoney = 4;
	bool playForPrizeMoney = 5;
	BetLimitWarningThreshold betLimitWarningThreshold = 6;
	bool hasDefaultLimits = 7;
	bool locked = 8;
}

message BetLimitWarningThreshold {
	int32 percentage = 1;
	rikstoto.shared.protobuf.Money willExceedDayThresholdWithBetAmount = 2;
	rikstoto.shared.protobuf.Money willExceedMonthThresholdWithBetAmount = 3;
}

message BetLimitSummaryForPeriod {
	rikstoto.shared.protobuf.Money sumBets = 1;
	rikstoto.shared.protobuf.Money limit = 2;
	rikstoto.shared.protobuf.Money nextLimit = 3;
	rikstoto.shared.protobuf.Money remainder = 4;
	BetLimitType periodType = 5;
	google.protobuf.Timestamp nextLimitStartDate = 6;
	rikstoto.shared.protobuf.Money previousRemainder = 7;
	rikstoto.shared.protobuf.Money totalRemainder = 8;
	rikstoto.shared.protobuf.Money previousMonthRemainder = 9;
	rikstoto.shared.protobuf.Money twoMonthsAgoRemainder = 10;
}

message BetLimitSummaryForPreviousPeriod {
	rikstoto.shared.protobuf.Money sumBets = 1;
	rikstoto.shared.protobuf.Money limit = 2;
	rikstoto.shared.protobuf.Money remainder = 3;
	PreviousPeriodType period = 4;
	rikstoto.shared.protobuf.Money rolloverBets = 5;
}

enum PreviousPeriodType
{
	PreviousMonth = 0;
	TwoMonthsAgo = 1;
}

message SetNewBetPeriodLimitWithTokenRequest {
	string token = 1;
	rikstoto.shared.protobuf.Money dailyLimit = 2;
	rikstoto.shared.protobuf.Money monthlyLimit = 3;
	bool doNotPlayForPrizeMoney = 4;
}

message SetNewBetPeriodLimitRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	rikstoto.shared.protobuf.Money dailyLimit = 2;
	rikstoto.shared.protobuf.Money monthlyLimit = 3;
	bool doNotPlayForPrizeMoney = 4;
}

message GetBetLimitStatusForAmountRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	rikstoto.shared.protobuf.Money amount = 2;
}

message GetBetLimitStatusForAmountResponse {
	bool exceeded = 1;
	AffectedBetLimit affectedLimit = 2;
	rikstoto.shared.protobuf.Money exceedingAmount = 3;
	bool affectsSubscriptions = 4;
	rikstoto.shared.protobuf.Money lowestLimitRemainder = 5;
	rikstoto.shared.protobuf.Money affectedLimitAmount = 6;
	AffectedBetLimit lowestLimit = 7;
}

message GetBetPeriodStatusRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetBetPeriodStatusResponse {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	repeated BetLimitSummaryForPeriod summaries = 2;
	BetLimitSummaryForPeriod lowestBetPeriodToday = 3;
	BetLimitSummaryForPeriod lowestBetPeriodTomorrow = 4;
	rikstoto.shared.protobuf.Money prizeMoney = 5;
	bool hasDefaultLimits = 6;
	bool playForPrizeMoney = 7;
	bool locked = 8;
}

message GetRemainingBetLimitRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
}

message GetRemainingBetLimitResponse {
	rikstoto.shared.protobuf.Money lowestLimitRemainder = 1;
	bool hasBetLimit = 2;
	bool hasDefaultBetLimit = 3;
}

message FindBetPeriodSummaryByTokenRequest {
	string token = 1;
}

message FindBetPeriodSummaryByTokenResponse {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	repeated BetLimitSummaryForPeriod summaries = 2;
	repeated BetLimitSummaryForPreviousPeriod previousSummaries = 3;
	rikstoto.shared.protobuf.Money prizeMoney = 4;
	bool playForPrizeMoney = 5;
	BetLimitWarningThreshold betLimitWarningThreshold = 6;
	bool hasDefaultLimits = 7;
	bool locked = 8;
}

enum AffectedBetLimit
{
	None = 0;
	AffectedBetLimitDaily = 1;
	AffectedBetLimitMonthly = 2;
}

message CanBetBePlacedRequest {
	rikstoto.shared.protobuf.CustomerKey customer = 1;
	rikstoto.shared.protobuf.Money amount = 2;
}

message CanBetBePlacedResponse {
	bool betCanBePlaced = 1;
}